<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:helpers="clr-namespace:TestProjectForDCT.Helpers"
        xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:TestProjectForDCT.ViewModels"
        xmlns:views="clr-namespace:TestProjectForDCT.Views"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="av"
        x:Class="TestProjectForDCT.Views.LeetCodeProblemsView"
        SizeToContent="Width"
        Title="LeetCode Problems" Height="560" Width="800">

    <Window.Resources>
        <helpers:DataConvertHelper x:Key="DataConvertHelper"/>
        <DataTemplate DataType="{x:Type vm:DetailsProblemViewModel}">
            <views:DetailsProblemView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:EnteringPersonalDataViewModel}">
            <views:EnteringPersonalDataView />
        </DataTemplate>
    </Window.Resources>

    <Grid Background="{DynamicResource BackgroundBrush}">
        <TextBlock Text="LeetCode Problems"
                   FontSize="29"
                   FontFamily="Calibri"
                   FontWeight="Bold"
                   Height="32"
                   VerticalAlignment="Top"
                   Margin="10,0,0,0"
                   HorizontalAlignment="Left"
                   Width="780"/>

        <ContentControl Content="{Binding CurrentViewModel}" Panel.ZIndex="99"/>

        <Grid Margin="10,32,10,0" Height="30" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>

            <Border BorderBrush="{DynamicResource HeaderBorderBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource HeaderBackgroundBrush}">
                <TextBlock Text="Title"
                           FontFamily="Calibri"
                           FontSize="15"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Margin="5,0"
                           FontWeight="Bold"/>
            </Border>

            <Border Grid.Column="1"
                    BorderBrush="{DynamicResource HeaderBorderBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource HeaderBackgroundBrush}">
                <TextBlock Text="Difficult"
                            FontFamily="Calibri"
                            FontSize="15"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontWeight="Bold"/>
            </Border>

            <Border Grid.Column="2"
                    BorderBrush="{DynamicResource HeaderBorderBrush}"
                    BorderThickness="1"
                    Background="{DynamicResource HeaderBackgroundBrush}">
                <TextBlock Text="Paid only"
                            FontFamily="Calibri"
                            FontSize="15"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            FontWeight="Bold"/>
            </Border>
        </Grid>

        <ListBox ItemsSource="{Binding DisplayedProblems}"
                SelectedItem="{Binding SelectedProblem}"
                Margin="10,67,10,58"
                Background="{DynamicResource BackgroundBrush}"
                HorizontalContentAlignment="Stretch">

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Padding="5"
                            Margin="2"
                            BorderBrush="{DynamicResource ListItemBorderBrush}"
                            BorderThickness="1"
                            HorizontalAlignment="Stretch"
                            Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding DataContext.ListItemClickedCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                                    CommandParameter="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Text="{Binding stat.question__title}"
                                FontWeight="Bold"
                                FontSize="14"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                TextWrapping="Wrap"
                                Margin="5,0" />

                            <TextBlock
                                Grid.Column="1"
                                Text="{Binding difficulty.level, Converter={StaticResource DataConvertHelper}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                FontWeight="Bold"
                                Margin="5,0"/>

                            <TextBlock 
                                Grid.Column="2"
                                Text="{Binding paid_only, Converter={StaticResource DataConvertHelper}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                FontWeight="Bold"
                                Margin="5,0"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="0,0,0,22"
                    Height="31"
                    VerticalAlignment="Bottom">

            <Button
                Command="{Binding PreviousPageCommand}"
                IsEnabled="{Binding IsPreviousPageButtonEnabled}"
                Content="&lt;"
                FontFamily="Calibri"
                FontSize="15"
                Height="27"
                Width="70">

                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{DynamicResource ButtonNormalBackground}"
                                CornerRadius="10"
                                x:Name="border">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <TextBlock Text="{Binding CurrentPage}"
                       VerticalAlignment="Center"
                       Margin="10,0"/>

            <Button Command="{Binding NextPageCommand}"
                    Content=">"
                    IsEnabled="{Binding IsNextPageButtonEnabled}"
                    FontFamily="Calibri"
                    FontSize="15"
                    Height="27"
                    Width="70">

                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{DynamicResource ButtonNormalBackground}"
                                CornerRadius="10"
                                x:Name="border">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</Window>
