<UserControl x:Class="TestProjectForDCT.Views.SandBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestProjectForDCT.Views"
             mc:Ignorable="d" 
             Background="#f4f4f4"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:helpers="clr-namespace:TestProjectForDCT.Helpers"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Grid>
        <ComboBox
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Width="120" 
            Height="22"
            SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
            ItemsSource="{Binding Languages}"/>

        <avalonEdit:TextEditor Name="CodeEditor"
                       ShowLineNumbers="True"
                       SyntaxHighlighting="{Binding SyntaxHighlighting}"
                       FontFamily="Consolas"
                       FontSize="14"
                       HorizontalScrollBarVisibility="Auto"
                       VerticalScrollBarVisibility="Auto"
                       Padding="10" Margin="0,22,0,203"
                       helpers:AvalonTextEditorHelper.BindableText="{Binding CodeText, Mode=TwoWay}"/>

        <xctk:IntegerUpDown
            Text="{Binding MemoryLimit, Mode=TwoWay}"
            TextAlignment="Left"
            DefaultValue="262144"
            DisplayDefaultValueOnEmptyText="True"
            Minimum="1"
            Maximum="262144"
            HorizontalAlignment="Left"
            Margin="342,-1,0,0"
            VerticalAlignment="Top"
            Width="158"
            Height="23"/>

        <xctk:IntegerUpDown
            Text="{Binding TimeLimit, Mode=TwoWay}"
            TextAlignment="Left"
            DefaultValue="5"
            DisplayDefaultValueOnEmptyText="True"
            Minimum="1"
            Maximum="5"
            HorizontalAlignment="Left"
            Margin="642,0,0,0"
            VerticalAlignment="Top" 
            Width="158"
            Height="22"/>

        <TextBox
            Text="{Binding ResultText, Mode=TwoWay}"
            HorizontalAlignment="Center"
            Margin="0,263,0,0"
            TextWrapping="Wrap"
            VerticalAlignment="Top"
            Width="800"
            Height="102"
            IsReadOnly="True"/>

        <Label
            Content="Memory limit (KB)"
            HorizontalAlignment="Left"
            Margin="232,-2,0,0"
            VerticalAlignment="Top"/>

        <Label
            Content="Time limit (Seconds)"
            HorizontalAlignment="Left"
            Margin="520,-2,0,0"
            VerticalAlignment="Top"/>

        <Label
            Content="Result"
            HorizontalAlignment="Center" 
            Margin="0,237,0,0" 
            VerticalAlignment="Top"/>

        <Button 
            Command="{Binding RunCodeCommand}"
            Content="Run code"
            Foreground="Black"
            Margin="0,384,485,0"
            FontSize="20" Height="40" VerticalAlignment="Top" HorizontalAlignment="Right" Width="172">

            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="GreenYellow" CornerRadius="10" x:Name="border">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LawnGreen"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button 
            Command="{Binding CheckCodeEvaluationCommand}"
            Content="Check status"
            IsEnabled="{Binding IsCheckStatusButtonEnabled}"
            Foreground="Black"
            Margin="485,384,0,0" 
            VerticalAlignment="Top"
            Height="40"
            FontSize="20" HorizontalAlignment="Left" Width="172">

            <Button.Template>
                <ControlTemplate TargetType="Button">

                    <Border Background="GreenYellow" CornerRadius="10" x:Name="border">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LawnGreen"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</UserControl>
