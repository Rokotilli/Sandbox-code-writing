<UserControl x:Class="TestProjectForDCT.Views.SandBoxView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestProjectForDCT.Views"
             mc:Ignorable="d" 
             Background="#f4f4f4"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:helpers="clr-namespace:TestProjectForDCT.Helpers"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="49*"/>
        </Grid.RowDefinitions>
        <ComboBox
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Width="120" 
            Height="22"
            SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
            ItemsSource="{Binding Languages}" Grid.RowSpan="2"/>

        <avalonEdit:TextEditor Name="CodeEditor"
                       ShowLineNumbers="True"
                       SyntaxHighlighting="{Binding SyntaxHighlighting}"
                       FontFamily="Consolas"
                       FontSize="14"
                       HorizontalScrollBarVisibility="Auto"
                       VerticalScrollBarVisibility="Auto"
                       Padding="10" Margin="0,13,0,203"
                       helpers:AvalonTextEditorHelper.BindableText="{Binding CodeText, Mode=TwoWay}" Grid.Row="1"/>

        <xctk:IntegerUpDown
            Text="{Binding MemoryLimit, Mode=TwoWay}"
            TextAlignment="Left"
            DefaultValue="262144"
            DisplayDefaultValueOnEmptyText="True"
            Minimum="1"
            Maximum="262144"
            HorizontalAlignment="Right"
            Margin="0,-1,300,0"
            VerticalAlignment="Top"
            Width="158"
            Height="23" Grid.RowSpan="2"/>

        <xctk:IntegerUpDown
            Text="{Binding TimeLimit, Mode=TwoWay}"
            TextAlignment="Left"
            DefaultValue="5"
            DisplayDefaultValueOnEmptyText="True"
            Minimum="1"
            Maximum="5"
            HorizontalAlignment="Right"
            VerticalAlignment="Top" 
            Width="158"
            Height="22" Grid.RowSpan="2"/>

        <TextBox
            Text="{Binding ResultText, Mode=TwoWay}"
            Margin="0,0,0,79"
            TextWrapping="Wrap"
            IsReadOnly="True" Grid.Row="1" Height="102" VerticalAlignment="Bottom"/>

        <Label
            Content="Memory limit (KB)"
            HorizontalAlignment="Right"
            Margin="0,-2,463,0"
            VerticalAlignment="Top" Grid.RowSpan="2"/>

        <Label
            Content="Time limit (Seconds)"
            HorizontalAlignment="Right"
            Margin="0,-2,163,0"
            VerticalAlignment="Top" Grid.RowSpan="2"/>

        <Label
            Content="Result" 
            Margin="0,0,0,181" Grid.Row="1" HorizontalAlignment="Center" Width="42" Height="26" VerticalAlignment="Bottom"/>

        <Button 
            Command="{Binding RunCodeCommand}"
            Content="Run code"
            Foreground="Black"
            Margin="60,0,0,26"
            FontSize="15" HorizontalAlignment="Left" Width="172" Height="40" VerticalAlignment="Bottom" Grid.Row="1">

            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="GreenYellow" CornerRadius="10" x:Name="border">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LawnGreen"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button 
            Command="{Binding CheckCodeEvaluationCommand}"
            Content="Check status"
            IsEnabled="{Binding IsCheckStatusButtonEnabled}"
            Foreground="Black"
            Margin="0,0,0,26" 
            VerticalAlignment="Bottom"
            Height="40"
            FontSize="15" HorizontalAlignment="Center" Width="172" Grid.Row="1">

            <Button.Template>
                <ControlTemplate TargetType="Button">

                    <Border Background="GreenYellow" CornerRadius="10" x:Name="border">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LawnGreen"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button 
            Command="{Binding OpenLeetCodeProblemsCommand}"
            Content="Open LeetCode problems"
            Foreground="Black"
            Margin="0,0,50,26"
            FontSize="15" Height="40" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="172" Grid.Row="1">

            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Background="GreenYellow" CornerRadius="10" x:Name="border">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LawnGreen"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkSeaGreen"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</UserControl>
